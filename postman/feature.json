{
	"info": {
		"_postman_id": "b371393c-1cbb-4084-b8aa-db9d146d9ac9",
		"name": "feature",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26538602"
	},
	"item": [
		{
			"name": "Добавление нового пользователя user1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 2xx и данные в формате json\", function() {\r",
							"    pm.response.to.be.success; // код ответа должен быть равен 2xx\r",
							"    pm.response.to.be.withBody; // ответ должен содержать тело\r",
							"    pm.response.to.be.json; // и тело ответа должно быть в формате JSON\r",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"user1\",\r\n    \"email\": \"user1@gmail.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/admin/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление категории 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 2xx и данные в формате json\", function() {\r",
							"    pm.response.to.be.success; // код ответа должен быть равен 2xx\r",
							"    pm.response.to.be.withBody; // ответ должен содержать тело\r",
							"    pm.response.to.be.json; // и тело ответа должно быть в формате JSON\r",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"category1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/admin/categories",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление события 1 от user1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 2xx и данные в формате json\", function() {\r",
							"    pm.response.to.be.success; // код ответа должен быть равен 2xx\r",
							"    pm.response.to.be.withBody; // ответ должен содержать тело\r",
							"    pm.response.to.be.json; // и тело ответа должно быть в формате JSON\r",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"annotation\":\"Аннотация тестстового событие 1 больше, чем на 20 символов\",\r\n    \"category\":1,\r\n    \"description\":\"Описание тестстового событие 1 больше, чем на 20 символов\",\r\n    \"eventDate\":\"2024-04-26 20:52:16\",\r\n    \"location\":\r\n        {   \r\n            \"lat\":-67.108,\r\n            \"lon\":11.9197\r\n        },\r\n    \"paid\":\"false\",\r\n    \"participantLimit\":\"312\",\r\n    \"requestModeration\":\"false\",\r\n    \"title\":\"Тестовое событие 1\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users/1/events",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"1",
						"events"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление лайка неопубликованному событию 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 4xx и данные в формате json\", function() {\r",
							"    pm.response.to.be.clientError; // код ответа должен быть равен 5xx\r",
							"    pm.response.to.be.withBody; // ответ должен содержать тело\r",
							"    pm.response.to.be.json; // и тело ответа должно быть в формате JSON\r",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users/1/events/1/rating?rate=LIKE",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"1",
						"events",
						"1",
						"rating"
					],
					"query": [
						{
							"key": "rate",
							"value": "LIKE"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Публикация события 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 2xx и данные в формате json\", function() {\r",
							"    pm.response.to.be.success; // код ответа должен быть равен 2xx\r",
							"    pm.response.to.be.withBody; // ответ должен содержать тело\r",
							"    pm.response.to.be.json; // и тело ответа должно быть в формате JSON\r",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"stateAction\":\"PUBLISH_EVENT\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/admin/events/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"events",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление лайка событию от инициатора user1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 4xx и данные в формате json\", function() {\r",
							"    pm.response.to.be.clientError; // код ответа должен быть равен 4xx\r",
							"    pm.response.to.be.withBody; // ответ должен содержать тело\r",
							"    pm.response.to.be.json; // и тело ответа должно быть в формате JSON\r",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users/1/events/1/rating?rate=LIKE",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"1",
						"events",
						"1",
						"rating"
					],
					"query": [
						{
							"key": "rate",
							"value": "LIKE"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление нового пользователя user2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 2xx и данные в формате json\", function() {\r",
							"    pm.response.to.be.success; // код ответа должен быть равен 2xx\r",
							"    pm.response.to.be.withBody; // ответ должен содержать тело\r",
							"    pm.response.to.be.json; // и тело ответа должно быть в формате JSON\r",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"user2\",\r\n    \"email\": \"user2@gmail.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/admin/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление лайка событию 1 от user2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 2xx и данные в формате json\", function() {\r",
							"    pm.response.to.be.success; // код ответа должен быть равен 2xx\r",
							"    pm.response.to.be.withBody; // ответ должен содержать тело\r",
							"    pm.response.to.be.json; // и тело ответа должно быть в формате JSON\r",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users/2/events/1/rating?rate=LIKE",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"2",
						"events",
						"1",
						"rating"
					],
					"query": [
						{
							"key": "rate",
							"value": "LIKE"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление дислайка событию 1  от user2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 2xx и данные в формате json\", function() {\r",
							"    pm.response.to.be.success; // код ответа должен быть равен 2xx\r",
							"    pm.response.to.be.withBody; // ответ должен содержать тело\r",
							"    pm.response.to.be.json; // и тело ответа должно быть в формате JSON\r",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users/2/events/1/rating?rate=DISLIKE",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"2",
						"events",
						"1",
						"rating"
					],
					"query": [
						{
							"key": "rate",
							"value": "DISLIKE"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Удаление оценки у события 1  от user2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 2xx и данные в формате json\", function() {\r",
							"    pm.response.to.be.success; // код ответа должен быть равен 2xx\r",
							"    pm.response.to.be.withBody; // ответ должен содержать тело\r",
							"    pm.response.to.be.json; // и тело ответа должно быть в формате JSON\r",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users/2/events/1/rating",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"2",
						"events",
						"1",
						"rating"
					],
					"query": [
						{
							"key": "rate",
							"value": "DISLIKE",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление нового пользователя user3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 2xx и данные в формате json\", function() {\r",
							"    pm.response.to.be.success; // код ответа должен быть равен 2xx\r",
							"    pm.response.to.be.withBody; // ответ должен содержать тело\r",
							"    pm.response.to.be.json; // и тело ответа должно быть в формате JSON\r",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"user3\",\r\n    \"email\": \"user3@gmail.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/admin/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление события 2 от user2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 2xx и данные в формате json\", function() {\r",
							"    pm.response.to.be.success; // код ответа должен быть равен 2xx\r",
							"    pm.response.to.be.withBody; // ответ должен содержать тело\r",
							"    pm.response.to.be.json; // и тело ответа должно быть в формате JSON\r",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"annotation\":\"Аннотация тестстового события 2 больше, чем на 20 символов\",\r\n    \"category\":1,\r\n    \"description\":\"Описание тестстового события 2 больше, чем на 20 символов\",\r\n    \"eventDate\":\"2025-04-26 20:52:16\",\r\n    \"location\":\r\n        {   \r\n            \"lat\":-56.108,\r\n            \"lon\":18.9197\r\n        },\r\n    \"paid\":\"false\",\r\n    \"participantLimit\":\"1\",\r\n    \"requestModeration\":\"false\",\r\n    \"title\":\"Тестовое событие 2\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users/2/events",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"2",
						"events"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление события 3 от user3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 2xx и данные в формате json\", function() {\r",
							"    pm.response.to.be.success; // код ответа должен быть равен 2xx\r",
							"    pm.response.to.be.withBody; // ответ должен содержать тело\r",
							"    pm.response.to.be.json; // и тело ответа должно быть в формате JSON\r",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"annotation\":\"Аннотация тестстового события 3 больше, чем на 20 символов\",\r\n    \"category\":1,\r\n    \"description\":\"Описание тестстового события 3 больше, чем на 20 символов\",\r\n    \"eventDate\":\"2026-04-26 20:52:16\",\r\n    \"location\":\r\n        {   \r\n            \"lat\":-33.108,\r\n            \"lon\":33.9197\r\n        },\r\n    \"paid\":\"false\",\r\n    \"participantLimit\":\"1\",\r\n    \"requestModeration\":\"false\",\r\n    \"title\":\"Тестовое событие 3\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users/3/events",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"3",
						"events"
					]
				}
			},
			"response": []
		},
		{
			"name": "Публикация события 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 2xx и данные в формате json\", function() {\r",
							"    pm.response.to.be.success; // код ответа должен быть равен 2xx\r",
							"    pm.response.to.be.withBody; // ответ должен содержать тело\r",
							"    pm.response.to.be.json; // и тело ответа должно быть в формате JSON\r",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"stateAction\":\"PUBLISH_EVENT\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/admin/events/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"events",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Публикация события 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 2xx и данные в формате json\", function() {\r",
							"    pm.response.to.be.success; // код ответа должен быть равен 2xx\r",
							"    pm.response.to.be.withBody; // ответ должен содержать тело\r",
							"    pm.response.to.be.json; // и тело ответа должно быть в формате JSON\r",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"stateAction\":\"PUBLISH_EVENT\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/admin/events/3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"events",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление лайка событию 1 от user2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 2xx и данные в формате json\", function() {\r",
							"    pm.response.to.be.success; // код ответа должен быть равен 2xx\r",
							"    pm.response.to.be.withBody; // ответ должен содержать тело\r",
							"    pm.response.to.be.json; // и тело ответа должно быть в формате JSON\r",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users/2/events/1/rating?rate=LIKE",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"2",
						"events",
						"1",
						"rating"
					],
					"query": [
						{
							"key": "rate",
							"value": "LIKE"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление лайка событию 1 от user3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 2xx и данные в формате json\", function() {\r",
							"    pm.response.to.be.success; // код ответа должен быть равен 2xx\r",
							"    pm.response.to.be.withBody; // ответ должен содержать тело\r",
							"    pm.response.to.be.json; // и тело ответа должно быть в формате JSON\r",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users/3/events/1/rating?rate=LIKE",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"3",
						"events",
						"1",
						"rating"
					],
					"query": [
						{
							"key": "rate",
							"value": "LIKE"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление лайка событию 2 от user3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 2xx и данные в формате json\", function() {\r",
							"    pm.response.to.be.success; // код ответа должен быть равен 2xx\r",
							"    pm.response.to.be.withBody; // ответ должен содержать тело\r",
							"    pm.response.to.be.json; // и тело ответа должно быть в формате JSON\r",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users/3/events/2/rating?rate=LIKE",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"3",
						"events",
						"2",
						"rating"
					],
					"query": [
						{
							"key": "rate",
							"value": "LIKE"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Получение событий с сортировкой по количеству лайков",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 2xx и данные в формате json\", function() {\r",
							"    pm.response.to.be.success; // код ответа должен быть равен 2xx\r",
							"    pm.response.to.be.withBody; // ответ должен содержать тело\r",
							"    pm.response.to.be.json; // и тело ответа должно быть в формате JSON\r",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/events?sort=LIKES",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"events"
					],
					"query": [
						{
							"key": "sort",
							"value": "LIKES"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Получение рейтинга самых популярных событий по лайкам",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 2xx и данные в формате json\", function() {\r",
							"    pm.response.to.be.success; // код ответа должен быть равен 2xx\r",
							"    pm.response.to.be.withBody; // ответ должен содержать тело\r",
							"    pm.response.to.be.json; // и тело ответа должно быть в формате JSON\r",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/ratings/events?rate=LIKE",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"ratings",
						"events"
					],
					"query": [
						{
							"key": "rate",
							"value": "LIKE"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Получение рейтинга самых популярных инициаторов по лайкам",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 2xx и данные в формате json\", function() {\r",
							"    pm.response.to.be.success; // код ответа должен быть равен 2xx\r",
							"    pm.response.to.be.withBody; // ответ должен содержать тело\r",
							"    pm.response.to.be.json; // и тело ответа должно быть в формате JSON\r",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/ratings/users?rate=LIKE",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"ratings",
						"users"
					],
					"query": [
						{
							"key": "rate",
							"value": "LIKE"
						}
					]
				}
			},
			"response": []
		}
	]
}